/*
 Boolean => true, false
 
 Number => برای مقادیر عددی
 
 String => برای مقادیر رشته ای
 
 Array =>  نگهداری داده های هم نوع کنار یکدیگر
 مثل : نمرات یک دانشجو
 Array = []

 ========================================================
 Tuple : نوع داده ای است شبیه به آرایه که هر خانه آن می تواند نوع داده مخصوص خود را داشته باشد
  myTuple:[string,int,boolean];

 ========================================================
 enum => نگهداری مقادیر مرتبط با هم که در زمان استفاده قرار است فقط یکی از آن مقادیر برگشت داده شود
 enum months {Farvardin, Ordibehesht, Khordad};
 enum months {Farvardin = 1, Ordibehesht = 2, Khordad = 3};
 ========================================================
 any : هر نوع داده ای می تواند داخل آن قرار بگیرد
 code:any;
 ========================================================
 void : استفاده در خروجی توابع
 تابع خروجی ندارد

=========================================================
null => برای مقداردهی اولیه به متغیرها استفاده می شود
serialNumber:null;
serialNumber:undefined;
=========================================================
never => برای خروجی توابع استفاده می شود
raiseError(message:string):never
{

}
==========================================================
Object => نوعی است که دیتا تایپ های تعریف شده مانند کلاس ها می توانند داخل آن قرار گیرند
code:number = 123;
myObj:Object = code; //error





*/